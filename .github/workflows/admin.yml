name: Build Admin

on:
  push:
    tags:
      - "v4.*"
      - "v5.*-rc[0-9]*"
      - "v5.*-alpha[0-9]*"
      - "v5.*-beta[0-9]*"

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          path: "app/sources" # needed cause of building to deploy/vi folder

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: "app/sources/admin/package-lock.json"
      - run: npm ci --prefix=app/sources/admin
      - run: npm run build --prefix=app/sources/admin
      - uses: actions/upload-artifact@v4
        with:
          name: buildfiles
          path: deploy/vi

  release:
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: buildfiles
          path: ./build

      - name: Compute prerelease + version from tag
        id: vars
        run: |
          TAG="${GITHUB_REF_NAME}"
          if [[ "$TAG" =~ -(rc|beta|alpha)[0-9]+$ ]]; then
            echo "is_prerelease=true" >> "$GITHUB_OUTPUT"
          else
            echo "is_prerelease=false" >> "$GITHUB_OUTPUT"
          fi
          echo "version=${TAG#v}" >> "$GITHUB_OUTPUT"

      - name: archive
        run: |
          cd ./build
          zip viur-vi.zip -r ./*

      - name: create release
        uses: softprops/action-gh-release@v2
        with:
          files: ./build/viur-vi.zip
          tag_name: ${{ github.ref_name }}
          name: v${{ steps.vars.outputs.version }}
          prerelease: ${{ steps.vars.outputs.is_prerelease == 'true' }}
          make_latest: ${{ steps.vars.outputs.is_prerelease != 'true' }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
